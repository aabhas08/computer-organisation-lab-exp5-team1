(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/shrenik/web2py/applications/vlab/controllers/default.py'
p4
sS'code'
p5
S'=# -*- coding: utf-8 -*- \n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################  \n@auth.requires_login()\ndef index():\n    import os\n    import re\n    import commands\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    pid=[]\n    values={}\n    flag=0\n    compile=True\n    list=[]\n    out="Test"\n    inp=None\n    out_mod=None\n    form=SQLFORM(db.programs)\n    if(form.accepts(request.vars,session)):\n         flag=1\n\t path=os.getcwd()\n         path=path+\'/applications/vlab/uploads/\'#+form.vars.file\n         inp=commands.getstatusoutput(\'cc \'+path+form.vars.file+\' -o\'+path+str(auth.user.id))\n\t if inp[0] != 0:\n\t\t compile=False\n\t i1_s=form.vars.i1_size * 1024; values["i1_s"]=i1_s\n\t d1_s=form.vars.d1_size * 1024; values["d1_s"]=d1_s\n\t l2_s=form.vars.l2_size * 1024; values["l2_s"]=l2_s\n\t values["compile"]=compile; values["input"]=""\n\t if compile==True:\n          command=\'valgrind --tool=cachegrind --I1=\'+str(i1_s)+\',\'+str(form.vars.i1_associativity)+\',\'+str(form.vars.i1_line_size)+ \' --cachegrind-out-file=\'+path+str(auth.user.id)+\'.%p \'+path+str(auth.user.id)\n          if len(form.vars.input_file)>0:\n\t     input_path=os.getcwd()\n             input_path=input_path+\'/applications/vlab/uploads/\'+form.vars.input_file; values["input"]=input_path\n             command=command+\'<\'+input_path\n         \n\t  out=commands.getstatusoutput(command)\n\t  out_mod=re.split(\'\\n\',out[1])\n\t  regex="==(\\d*)==\\s*([^:]*):\\s*(\\d+.*)"\n\t  for i in out_mod:\n\t\t match=re.findall(regex,i)\n\t\t if len(match)>0:\n\t\t \tprocid=match[0][0]\n\t\t\tif procid not in pid:\n\t\t\t\t pid.append(procid)\n\t\t\tlist.append(match[0])\t\n    if len(list)>0:\n\tregex="([^\\(]+)\\(\\s*(\\S+)[^\\+]*\\+\\s*(\\S+).*" ; t1= re.findall(regex,list[5][2]) ; values["a"]=t1[0][0] ; values["a_1"]=t1[0][1] ; values["a_2"] = t1[0][2] \n\tt2= re.findall(regex,list[6][2]) ; values["c"]=t2[0][0] ; values["c_1"]=t2[0][1] ; values["c_2"] = t2[0][2] ; values["e"]=values["c"] ; values["e_1"] = values["c_1"]; values["e_2"]=values["c_2"] \n\tt3= re.findall(regex,list[8][2]) ; values["d"]=t3[0][0] ; values["d_1"]=t3[0][1] ; values["d_2"] = t3[0][2] \n\tt4= re.findall(regex,list[7][2]) ; values["g"]=t4[0][0] ; values["g_1"]=t4[0][1] ; values["g_2"] = t4[0][2]\n\tvalues["b"]= int(values["a"].replace(",",""))-int(values["c"].replace(",","")) ; values["b_1"]= int(values["a_1"].replace(",",""))-int(values["c_1"].replace(",","")) ; values["b_2"]= int(values["a_2"].replace(",",""))-int(values["c_2"].replace(",","")) \n\tvalues["f"]= int(values["e"].replace(",",""))-int(values["g"].replace(",","")) ; values["f_1"]= int(values["e_1"].replace(",",""))-int(values["g_1"].replace(",","")) ; values["f_2"]= int(values["e_2"].replace(",",""))-int(values["g_2"].replace(",","")) \n\tvalues["h"]=str("%.2f"%((float(values["g"].replace(",",""))/float(values["e"].replace(",","")))*100))+"%" \n\tvalues["h_1"]=str("%.2f"%((float(values["g_1"].replace(",",""))/float(values["e_1"].replace(",","")))*100))+"%"\n\tvalues["h_2"]=str("%.2f"%((float(values["g_2"].replace(",",""))/float(values["e_2"].replace(",","")))*100))+"%"\n    #session.values=values\n\n    \n    response.flash = T(\'Welcome to web2py\')\n    return dict(form=form,message=T(\'Hello World\'),list=list,pid=pid,flag=flag,values=values,compile=compile)\n\n\'\'\'def show_graphs():\n\t y1=[]\n\t path=os.getcwd()\n         path=path+\'/applications/vlab/uploads/\'\n\t input_path=session.values["input"]\n\t if session.values["compile"]=True:\n\t\tfor i in range (2,9): \n\t\t\tcommand=\'valgrind --tool=cachegrind --I1=\'+str(session.values["i1_s"])+\',\'+str(i)+\',\'+str(64)+ \' --cachegrind-out-file=\'+path+str(auth.user.id)+\'.%p \'+path+str(auth.user.id)\n\t \t\tif input_path != None:\n\t   \t\t\tcommand=command + \'<\' +input_path\n\t\t\tout=commands.getstatusoutput(command)\n\t\t\tout_mod=re.split(\'\\n\',out[1])\n\t  \t\tregex="==(\\d*)==\\s*([^:]*):\\s*(\\d+.*)"\n\t  \t\tfor i in out_mod:\n\t\t \t\tmatch=re.findall(regex,i)\n\t\t \t\tif len(match)>0:\n\t\t\t\t\tlist.append(match[0])\n\n\t\t\tif len(list) >0:\n\t\t\t\ty1.append(\n\'\'\'\n\t \n\n\ndef customize():\n    form=SQLFORM(db.options)\n    \ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login \n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    session.forget()\n    return service()\n\nresponse._vars=response._caller(index)\n'
p6
sS'snapshot'
p7
(dp8
S'exception'
p9
(dp10
S'__getslice__'
p11
S"<method-wrapper '__getslice__' of exceptions.SyntaxError object>"
p12
sS'text'
p13
S"'=# -*- coding: utf-8 -*- \\n'"
p14
sS'__str__'
p15
S"<method-wrapper '__str__' of exceptions.SyntaxError object>"
p16
sS'__reduce__'
p17
S'<built-in method __reduce__ of exceptions.SyntaxError object>'
p18
sS'__dict__'
p19
S'{}'
p20
sS'__sizeof__'
p21
S'<built-in method __sizeof__ of exceptions.SyntaxError object>'
p22
sS'__init__'
p23
S"<method-wrapper '__init__' of exceptions.SyntaxError object>"
p24
sS'__setattr__'
p25
S"<method-wrapper '__setattr__' of exceptions.SyntaxError object>"
p26
sS'__reduce_ex__'
p27
S'<built-in method __reduce_ex__ of exceptions.SyntaxError object>'
p28
sS'__new__'
p29
S'<built-in method __new__ of type object>'
p30
sS'__format__'
p31
S'<built-in method __format__ of exceptions.SyntaxError object>'
p32
sS'__class__'
p33
S"<type 'exceptions.SyntaxError'>"
p34
sS'filename'
p35
S"'/home/shrenik/web2py/applications/vlab/controllers/default.py'"
p36
sS'lineno'
p37
S'1'
sS'msg'
p38
S"'invalid syntax'"
p39
sS'__doc__'
p40
S"'Invalid syntax.'"
p41
sS'__getitem__'
p42
S"<method-wrapper '__getitem__' of exceptions.SyntaxError object>"
p43
sS'__setstate__'
p44
S'<built-in method __setstate__ of exceptions.SyntaxError object>'
p45
sS'__getattribute__'
p46
S"<method-wrapper '__getattribute__' of exceptions.SyntaxError object>"
p47
sS'print_file_and_line'
p48
S'None'
p49
sS'args'
p50
S"('invalid syntax', ('/home/shrenik/web2py/applications/vlab/controllers/default.py', 1, 1, '=# -*- coding: utf-8 -*- \\n'))"
p51
sS'__subclasshook__'
p52
S'<built-in method __subclasshook__ of type object>'
p53
sS'offset'
p54
S'1'
sS'__unicode__'
p55
S'<built-in method __unicode__ of exceptions.SyntaxError object>'
p56
sS'__delattr__'
p57
S"<method-wrapper '__delattr__' of exceptions.SyntaxError object>"
p58
sS'__repr__'
p59
S"<method-wrapper '__repr__' of exceptions.SyntaxError object>"
p60
sS'__hash__'
p61
S"<method-wrapper '__hash__' of exceptions.SyntaxError object>"
p62
ssS'evalue'
p63
S'invalid syntax (default.py, line 1)'
p64
sS'request'
p65
(dp66
S'function'
p67
S"'index'"
p68
sS'body'
p69
S'<cStringIO.StringO object>'
p70
sS'wsgi'
p71
S"<Storage {'start_response': <function <lambda> a...ING': 'gzip,deflate', 'HTTP_KEEP_ALIVE': '115'}}>"
p72
sS'extension'
p73
S"'html'"
p74
sS'vars'
p75
S'<Storage {}>'
p76
sS'cid'
p77
S'None'
p78
sS'url'
p79
S'<gluon.html.XML object>'
p80
sg50
S'[]'
p81
sS'controller'
p82
S"'default'"
p83
sS'cookies'
p84
S"<SimpleCookie: __utma='96992031.1671719183.12879...'127-0-0-1-9ad01b29-ea99-4946-9e76-5ac5b38707e0'>"
p85
sS'application'
p86
S"'vlab'"
p87
sS'ajax'
p88
S'False'
p89
sS'client'
p90
S"'127.0.0.1'"
p91
sS'env'
p92
S"<Storage {'http_user_agent': 'Mozilla/5.0 (X11; ...te', 'query_string': '', 'wsgi_run_once': False}>"
p93
sS'raw_args'
p94
S'None'
p95
sS'get_vars'
p96
S'<Storage {}>'
p97
sS'folder'
p98
S"'/home/shrenik/web2py/applications/vlab/'"
p99
sS'now'
p100
S'datetime.datetime(2010, 10, 26, 19, 18, 48, 809002)'
p101
sS'post_vars'
p102
S'<Storage {}>'
p103
ssS'frames'
p104
(lp105
(dp106
S'file'
p107
S'/home/shrenik/web2py/gluon/restricted.py'
p108
sS'dump'
p109
(dp110
S'code'
p111
S"'=# -*- coding: utf-8 -*- \\n\\n#####################...ervice()\\n\\nresponse._vars=response._caller(index)\\n'"
p112
sS'layer'
p113
S"'/home/shrenik/web2py/applications/vlab/controllers/default.py'"
p114
sS'global compile2'
p115
S'<function compile2>'
p116
sS'ccode'
p117
S'undefined'
p118
ssS'lnum'
p119
I186
sS'lines'
p120
(dp121
I181
S''
sI182
S'    try:'
p122
sI183
S'        if type(code) == types.CodeType:'
p123
sI184
S'            ccode = code'
p124
sI185
S'        else:'
p125
sI186
S'            ccode = compile2(code,layer)'
p126
sI187
S''
sI188
S'        exec ccode in environment'
p127
sI189
S'    except HTTP:'
p128
sI190
S'        raise'
p129
ssS'call'
p130
S"(code='=# -*- coding: utf-8 -*- \\n\\n#####################...ervice()\\n\\nresponse._vars=response._caller(index)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, 'CODE': <class 'gluon.html.CODE'>, 'CRYPT': <class 'gluon.validators.CRYPT'>, ...}, layer='/home/shrenik/web2py/applications/vlab/controllers/default.py')"
p131
sS'func'
p132
S'restricted'
p133
sa(dp134
g107
S'/home/shrenik/web2py/gluon/restricted.py'
p135
sg109
(dp136
S'builtincompile'
p137
S'<built-in function compile>'
p138
sS'code'
p139
S"'=# -*- coding: utf-8 -*- \\n\\n#####################...ervice()\\n\\nresponse._vars=response._caller(index)\\n'"
p140
sS'code.rstrip'
p141
S'<built-in method rstrip of str object>'
p142
sS').replace'
p143
g118
sS'layer'
p144
S"'/home/shrenik/web2py/applications/vlab/controllers/default.py'"
p145
ssg119
I173
sg120
(dp146
I168
S''
sI169
S'def compile2(code,layer):'
p147
sI170
S'    """'
p148
sI171
S"    The +'\\n' is necessary else compile fails when code ends in a comment."
p149
sI172
S'    """'
p150
sI173
S"    return compile(code.rstrip().replace('\\r\\n','\\n')+'\\n', layer, 'exec')"
p151
sI174
S''
sI175
S"def restricted(code, environment={}, layer='Unknown'):"
p152
sI176
S'    """'
p153
sI177
S'    runs code in environment and returns the output. if an exception occurs'
p154
ssg130
S"(code='=# -*- coding: utf-8 -*- \\n\\n#####################...ervice()\\n\\nresponse._vars=response._caller(index)\\n', layer='/home/shrenik/web2py/applications/vlab/controllers/default.py')"
p155
sg132
S'compile2'
p156
sasS'pyver'
p157
S'Python 2.6.6: /usr/bin/python'
p158
sS'session'
p159
(dp160
S'flash'
p161
S'None'
p162
sS'_formkey[login]'
p163
S"'32f67b3d-2403-41af-ad6e-11ba7dcd235f'"
p164
sS'auth'
p165
S"<Storage {'expiration': 3600, 'user': <Storage {... 10, 26, 19, 18, 48, 809002), 'remember': False}>"
p166
sS'_formkey[programs_create]'
p167
S"'af7ab7e5-b658-41d2-8fb6-b4842e0dc593'"
p168
ssS'etype'
p169
S"<type 'exceptions.SyntaxError'>"
p170
sS'date'
p171
S'Tue Oct 26 19:18:48 2010'
p172
sS'response'
p173
(dp174
S'status'
p175
S'200'
p176
sg69
S'<cStringIO.StringO object>'
p177
sg84
S"<SimpleCookie: session_id_vlab='127-0-0-1-9ad01b29-ea99-4946-9e76-5ac5b38707e0'>"
p178
sS'_vars'
p179
S'None'
p180
sS'title'
p181
S"'vlab'"
p182
sS'session_file'
p183
S"<open file '/home/shrenik/web2py/applications/vl...ad01b29-ea99-4946-9e76-5ac5b38707e0', mode 'rb+'>"
p184
sS'flash'
p185
S"''"
p186
sS'_custom_rollback'
p187
S'None'
p188
sS'session_id'
p189
S"'127-0-0-1-9ad01b29-ea99-4946-9e76-5ac5b38707e0'"
p190
sS'headers'
p191
S"<Storage {'Expires': 'Tue, 26 Oct 2010 13:48:48 ...he, must-revalidate, post-check=0, pre-check=0'}>"
p192
sS'meta'
p193
S"<Storage {'keywords': 'bla bla bla', 'description': 'describe your app', 'author': 'you'}>"
p194
sS'session_filename'
p195
S"'/home/shrenik/web2py/applications/vlab/sessions/127-0-0-1-9ad01b29-ea99-4946-9e76-5ac5b38707e0'"
p196
sS'postprocessing'
p197
S'[]'
p198
sS'menu'
p199
S"[(<lazyT 'Index'>, False, <gluon.html.XML object>, []), ('Change Layout', False, <gluon.html.XML object>)]"
p200
sS'_view_environment'
p201
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, 'CODE': <class 'gluon.html.CODE'>, 'CRYPT': <class 'gluon.validators.CRYPT'>, ...}"
p202
sS'subtitle'
p203
S"<lazyT 'customize me!'>"
p204
sS'session_id_name'
p205
S"'session_id_vlab'"
p206
sS'_custom_commit'
p207
S'None'
p208
sS'_caller'
p209
S'<function <lambda>>'
p210
sS'files'
p211
S'[]'
p212
sS'view'
p213
S"'default/index.html'"
p214
ssS'locals'
p215
(dp216
g3
S"'/home/shrenik/web2py/applications/vlab/controllers/default.py'"
p217
sg5
S"'=# -*- coding: utf-8 -*- \\n\\n#####################...ervice()\\n\\nresponse._vars=response._caller(index)\\n'"
p218
sssS'traceback'
p219
S'Traceback (most recent call last):\n  File "/home/shrenik/web2py/gluon/restricted.py", line 186, in restricted\n    ccode = compile2(code,layer)\n  File "/home/shrenik/web2py/gluon/restricted.py", line 173, in compile2\n    return compile(code.rstrip().replace(\'\\r\\n\',\'\\n\')+\'\\n\', layer, \'exec\')\n  File "/home/shrenik/web2py/applications/vlab/controllers/default.py", line 1\n    =# -*- coding: utf-8 -*-\n    ^\nSyntaxError: invalid syntax\n'
p220
s.